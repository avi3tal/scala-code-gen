package net.yefremov.sample.codegen

import net.yefremov.sample.codegen.ast.TreehuggerGenerator
import net.yefremov.sample.codegen.schema.{Field, FieldType, TypeName, TypeSchema}
import net.yefremov.sample.codegen.template.TwirlGenerator

object Main extends App {

  def generate(schema: TypeSchema, generator: Generator): Unit = {
    println("*" * 80)
    println(s"Source generated by ${generator.getClass}")
    println("*" * 80)
    println(generator.generate(schema))
    println()
  }


  val schema = TypeSchema(
    name = TypeName("net.yefremov.sample.codegen.Foo"),
    comment = "Test schema to play with the generators",
    fields = Seq(
      Field(
        name = "bar",
        valueType = FieldType.String
      ),
      Field(
        name = "baz",
        valueType = FieldType.Integer
      )
    )
  )

  generate(schema, new TwirlGenerator)
  generate(schema, new TreehuggerGenerator)
}
